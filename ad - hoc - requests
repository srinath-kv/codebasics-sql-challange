# Q1
Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

SELECT DISTINCT market,region, customer  
       FROM dim_customer 
       WHERE region = "APAC" AND customer = "Atliq Exclusive";

# Q2
What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields,
unique_products_2020
unique_products_2021 
percentage_chg

WITH uniq_prod_2020 AS (
    SELECT COUNT(DISTINCT product_code) AS unique_product_2020
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020),
    
uniq_prod_2021 AS (
    SELECT COUNT(DISTINCT product_code) AS unique_product_2021
    FROM fact_sales_monthly  
    WHERE fiscal_year = 2021)
    
SELECT unique_product_2020,unique_product_2021,
      (unique_product_2021 - unique_product_2020)*100/unique_product_2020 AS percentage_chg 
       FROM uniq_prod_2020 CROSS JOIN uniq_prod_2021;
       
#Q3
Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields,
segment 
product_count

SELECT segment,COUNT(DISTINCT product_code) AS unique_product
       FROM dim_product
       GROUP BY segment
       ORDER BY unique_product DESC;

    
#Q4
4.	Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields,
segment 
product_count_2020 
product_count_2021 
difference

WITH uniq_prod_2020 AS (
    SELECT dp.segment, COUNT(DISTINCT dp.product_code) AS unique_product_2020
    FROM fact_sales_monthly fs
    JOIN dim_product dp ON
    fs.product_code = dp.product_code 
    WHERE fs.fiscal_year = 2020
    GROUP BY dp.segment),
    
uniq_prod_2021 AS (
    SELECT dp.segment, COUNT(DISTINCT dp.product_code) AS unique_product_2021
    FROM fact_sales_monthly fs
    JOIN dim_product dp ON
    fs.product_code = dp.product_code 
    WHERE fs.fiscal_year = 2021
    GROUP BY dp.segment)
    
SELECT up1.segment,unique_product_2020,unique_product_2021,
      (unique_product_2021 - unique_product_2020) AS difference 
       FROM uniq_prod_2020 up1 
       JOIN uniq_prod_2021 up2 ON
       up1.segment = up2.segment
       GROUP BY up1.segment
       ORDER BY difference DESC;
       
#Q5
Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields,
product_code 
product 
manufacturing_cost

SELECT dp.product_code,dp.product,
	     CONCAT(fm.manufacturing_cost,' - ','Min Cost') AS manufacturing_cost
	     FROM dim_product dp
	     JOIN fact_manufacturing_cost fm ON
	     dp.product_code = fm.product_code
	     WHERE fm.manufacturing_cost = (
SELECT MIN(manufacturing_cost) AS manufacturing_cost FROM fact_manufacturing_cost)

UNION 

SELECT dp.product_code,dp.product,
	     CONCAT(fm.manufacturing_cost,' - ','Max Cost') AS manufacturing_cost
	     FROM dim_product dp
	     JOIN fact_manufacturing_cost fm ON
	     dp.product_code = fm.product_code
	     WHERE fm.manufacturing_cost = (
SELECT MAX(manufacturing_cost) AS manufacturing_cost FROM fact_manufacturing_cost);

#Q6
Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields,
customer_code 
customer
average_discount_percentage

SELECT pre.customer_code,customer,
	     AVG(pre.pre_invoice_discount_pct) AS avg_pre_invoice_discount_pct_top_5
       FROM fact_pre_invoice_deductions pre 
       JOIN dim_customer c ON 
       pre.customer_code = C.customer_code
       WHERE c.market = 'India' AND fiscal_year = 2021
       GROUP BY c.customer_code
       ORDER BY avg_pre_invoice_discount_pct_top_5 DESC LIMIT 5;
       
 
       
#Q7
Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions.
The final report contains these columns:
Month 
Year
Gross sales Amount

SELECT CAST(DATE_FORMAT(sm.date, '%M') AS CHAR(3)) AS month_name,
       sm.fiscal_year,
	     SUM(gross_price * sold_quantity) AS total_gross_price
       FROM fact_gross_price gp 
       JOIN fact_sales_monthly sm
       ON gp.product_code = sm.product_code
	     AND gp.fiscal_year = sm.fiscal_year
       JOIN dim_customer c
       ON sm.customer_code = c.customer_code
       WHERE c.customer LIKE "%Atliq Exclusive%"
       GROUP BY month_name,sm.fiscal_year
       ORDER BY sm.date;
      
#Q8
In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity,
Quarter 
total_sold_quantity

SELECT SUM(sold_quantity) AS sold_quantity,
	   CASE 
	   WHEN MONTH(date) IN (9,10,11) THEN "Q1"
	   WHEN MONTH(date) IN (12,1,2) THEN "Q2"
	   WHEN MONTH(date) IN (3,4,5) THEN "Q3"
	   WHEN MONTH(date) IN (6,7,8) THEN "Q4"
	   END AS "quater"
	   FROM fact_sales_monthly
	   WHERE fiscal_year = 2020
	   GROUP BY quater
	   ORDER BY sold_quantity;   

#Q9
Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields,
channel 
gross_sales_mln
percentage

WITH gross_sales AS (
	  SELECT c.channel,
	  ROUND(SUM(gross_price * sold_quantity)/1000000,2) AS total_gross_sales_mln
    FROM fact_gross_price gp 
    JOIN fact_sales_monthly sm
    ON gp.product_code = sm.product_code
    AND gp.fiscal_year = sm.fiscal_year
    JOIN dim_customer c
    ON sm.customer_code = c.customer_code
    WHERE sm.fiscal_year = 2021
    GROUP BY c.channel)

SELECT *,
       total_gross_sales_mln*100/SUM(total_gross_sales_mln) OVER() AS percentange
       FROM gross_sales
       ORDER BY percentange DESC;
       
#Q10
Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields,
division 
product_code

WITH total_qty AS (
       SELECT division,
       product_code,
       product,
       SUM(sold_quantity) AS total_sold_quantity
       FROM dim_product JOIN 
       fact_sales_monthly
       USING(product_code)
	     WHERE fiscal_year = 2021
       GROUP BY division,product_code),

rnk AS (SELECT *,
       DENSE_RANK() OVER(PARTITION BY division ORDER BY total_sold_quantity DESC) AS rank_order
       FROM total_qty)
       
SELECT * FROM rnk WHERE rank_order < 4;
